from django.contrib.auth.tokens import PasswordResetTokenGenerator
import six

class EmailVerificationTokenGenerator(PasswordResetTokenGenerator):
    def _make_hash_value(self, user, timestamp):
        return (
            six.text_type(user.pk) + six.text_type(timestamp) +
            six.text_type(user.is_active)
        )

account_activation_token = EmailVerificationTokenGenerator()

def get_book_id(acronym):
    # Mapping from English acronyms to Serbian acronyms
    acronym_mapping = {
        # Old Testament
        'GEN': '1 Мој',
        'EXO': '2 Мој',
        'LEV': '3 Мој',
        'NUM': '4 Мој',
        'DEU': '5 Мој',
        'JOS': 'ИНав',
        'JDG': 'Суд',
        'RUT': 'Рута',
        '1SA': '1 Сам',
        '2SA': '2 Сам',
        '1KI': '1 цар',
        '2KI': '2 цар',
        '1CH': '1 дн',
        '2CH': '2 дн',
        'EZR': '1 Језд',
        'NEH': 'Нем',
        'EST': 'Јест',
        'JOB': 'Јов',
        'PSA': 'Пс',
        'PRO': 'ПрС',
        'ECC': 'Проп',
        'SNG': 'Пп',
        'ISA': 'Ис',
        'JER': 'Јер',
        'LAM': 'ПлЈ',
        'EZK': 'Јез',
        'DAN': 'Дан',
        'HOS': 'Ос',
        'JOL': 'Јл',
        'AMO': 'Ам',
        'OBA': 'Авд',
        'JON': 'Јона',
        'MIC': 'Михеј',
        'NAM': 'Нм',
        'HAB': 'Авак',
        'ZEP': 'Соф',
        'HAG': 'Аг',
        'ZEC': 'Зах',
        'MAL': 'Мал',
        
        # Deuterocanonical
        'TOB': 'Тов',
        'JDT': 'Јдт',
        'WIS': 'ПремС',
        'SIR': 'Сирах',
        'BAR': 'Вар',
        'LJE': 'ПослЈ',
        '1MA': '1 Мак',
        '2MA': '2 Мак',
        '3MA': '3 Мак',
        
        # New Testament
        'MAT': 'Мт',
        'MRK': 'Мк',
        'LUK': 'Лк',
        'JHN': 'Јн',
        'ACT': 'Дап',
        'ROM': 'Рим',
        '1CO': '1 Кор',
        '2CO': '2 Кор',
        'GAL': 'Гал',
        'EPH': 'Еф',
        'PHP': 'Флп',
        'COL': 'Кол',
        '1TH': '1 Сол',
        '2TH': '2 Сол',
        '1TI': '1 Тим',
        '2TI': '2 Тим',
        'TIT': 'Тит',
        'PHM': 'Флм',
        'HEB': 'Јев',
        'JAS': 'Јак',
        '1PE': '1 Пет',
        '2PE': '2 Пет',
        '1JN': '1 Јн',
        '2JN': '2 Јн',
        '3JN': '3 Јн',
        'JUD': 'Јуд',
        'REV': 'Отк'
    }
    
    # Mapping from Serbian acronyms to IDs
    serbian_acronym_to_id = {
        '1 Мој': 1,
        '2 Мој': 2,
        '3 Мој': 3,
        '4 Мој': 4,
        '5 Мој': 5,
        'ИНав': 6,
        'Суд': 7,
        'Рута': 8,
        '1 Сам': 9,
        '2 Сам': 10,
        '1 цар': 11,
        '2 цар': 12,
        '1 дн': 13,
        '2 дн': 14,
        '1 Језд': 15,
        '2 Језд': 16,
        'Нем': 17,
        'Тов': 18,
        'Јдт': 19,
        'Јест': 20,
        '1 Мак': 21,
        '2 Мак': 22,
        '3 Мак': 23,
        'Јов': 24,
        'Пс': 25,
        'ПрС': 26,
        'Проп': 27,
        'Пп': 28,
        'ПремС': 29,
        'Сирах': 30,
        'Ис': 31,
        'Јер': 32,
        'ПлЈ': 33,
        'ПослЈ': 34,
        'Вар': 35,
        'Јез': 36,
        'Дан': 37,
        'Ос': 38,
        'Јл': 39,
        'Ам': 40,
        'Авд': 41,
        'Јона': 42,
        'Михеј': 43,
        'Нм': 44,
        'Авак': 45,
        'Соф': 46,
        'Аг': 47,
        'Зах': 48,
        'Мал': 49,
        'Мт': 50,
        'Мк': 51,
        'Лк': 52,
        'Јн': 53,
        'Дап': 54,
        'Рим': 55,
        '1 Кор': 56,
        '2 Кор': 57,
        'Гал': 58,
        'Еф': 59,
        'Флп': 60,
        'Кол': 61,
        '1 Сол': 62,
        '2 Сол': 63,
        '1 Тим': 64,
        '2 Тим': 65,
        'Тит': 66,
        'Флм': 67,
        'Јев': 68,
        'Јак': 69,
        '1 Пет': 70,
        '2 Пет': 71,
        '1 Јн': 72,
        '2 Јн': 73,
        '3 Јн': 74,
        'Јуд': 75,
        'Отк': 76
    }
    
    # Convert input to uppercase to match our mapping
    upper_acronym = acronym.upper()
    
    if upper_acronym in acronym_mapping:
        serbian_acronym = acronym_mapping[upper_acronym]
        return serbian_acronym_to_id.get(serbian_acronym, None)
    else:
        return None